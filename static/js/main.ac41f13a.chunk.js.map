{"version":3,"sources":["components/ToDo.js","components/ToDoList.js","components/Footer.js","components/ToDoAddTask.js","initialData.js","components/ToDoApp.js","reportWebVitals.js","index.js"],"names":["ToDo","state","completed","props","task","bstClass","param","toogleCompleted","setState","currentState","className","this","name","onClick","Component","ToDoList","filteredTask","tasks","match","params","filter","length","class","map","id","Footer","onDeleteTaskCompleted","to","exact","ToDoAddTask","handleSubmit","e","preventDefault","onAddTask","newTask","value","history","push","onSubmit","form","type","required","ref","input","initialData","ToDoApp","newTaskName","uniqueId","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ac41f13a.chunk.js","sourcesContent":["import { Component } from \"react\";\r\n\r\nclass ToDo extends Component\r\n{\r\n\r\n    state = {\r\n        completed : this.props.task.completed\r\n    }\r\n\r\n    bstClass = (param) =>\r\n    {\r\n        if(param == true)\r\n        {\r\n            return 'bg-success';\r\n        }\r\n        else\r\n        {\r\n            return;\r\n        }\r\n    }\r\n    toogleCompleted = () => {\r\n        this.setState(currentState =>({ completed: !currentState.completed }));\r\n        this.props.task.completed = !this.state.completed;\r\n\r\n        // console.log(this.props.task.completed)\r\n    }\r\n    render()\r\n    {\r\n        return(\r\n            <li className={\"list-group-item d-flex justify-content-between \" + this.bstClass(this.state.completed)} >\r\n                {this.props.task.name}\r\n                <button className=\"btn btn-sm ml-auto btn-outline-success\" \r\n                onClick = {() => this.toogleCompleted()}>\r\n                    &#x2713;</button>\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToDo;","import React, { Component } from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport ToDo from './ToDo';\r\nimport { matchPath } from \"react-router-dom\";\r\n\r\nconst ToDoList = ({tasks,match}) =>\r\n{\r\n \r\n    let filteredTask;\r\n    let filterResult;\r\n\r\n    if(match.params.filter == 'completed')\r\n    {\r\n        filteredTask = tasks.filter(task => task.completed)\r\n    }\r\n    else\r\n    {\r\n        filteredTask = tasks;\r\n    }\r\n\r\n    if(filteredTask.length === 0)\r\n    {\r\n        return (\r\n            <>\r\n                <h1 className=\"m-3\">Liste de tâches</h1>\r\n                <ul className=\"list-group m-3\">\r\n                <li className=\"list-group-item d-flex justify-content-between\">\r\n                    Aucune tache completé :(...\r\n                    <button className=\"btn btn-sm ml-auto btn-outline-success\">\r\n                        Fermer\r\n                    </button>\r\n                </li>\r\n                </ul>\r\n            </>\r\n            )\r\n    }\r\n    else\r\n    {\r\n        return (\r\n            <>\r\n                <h1 class=\"m-3\">Liste de tâches</h1>\r\n                <ul className=\"list-group m-3\">\r\n                {\r\n                    filteredTask.map((task) => <ToDo task={task} key={task.id} />)\r\n                }\r\n                </ul>\r\n            </ >\r\n            \r\n            )\r\n    }\r\n    \r\n}\r\n\r\nexport default ToDoList;","import { Component } from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { FaListAlt, FaCheckSquare, FaPlusSquare, FaTrash } from 'react-icons/fa';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Footer = ({onDeleteTaskCompleted}) => {\r\n    return (\r\n        <footer className=\"d-flex justify-content-between bg-secondary p-3\" id=\"mainFooter\">\r\n            <div className=\"btn-group\">\r\n                <NavLink to=\"/\" className=\"btn btn-outline-dark bg-light\" exact={true}><FaListAlt /></NavLink >\r\n                <NavLink to=\"/completed\" className=\"btn btn-outline-dark bg-light\"><FaCheckSquare /></NavLink>\r\n                <NavLink to=\"/add-task\" className=\"btn btn-outline-dark bg-light\" exact={true}><FaPlusSquare /></NavLink>\r\n            </div>\r\n            <button className=\"btn btn-outline-dark bg-light\" onClick={onDeleteTaskCompleted} ><FaTrash /></button>\r\n        </footer>)\r\n}\r\n\r\nexport default Footer;","import { Component } from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nclass ToDoAddTask extends Component\r\n{\r\n    handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        this.props.onAddTask(this.newTask.value);\r\n        this.props.history.push('/');\r\n        // console.log(this.props);\r\n    }\r\n    render()\r\n    {\r\n        return (\r\n        <section>\r\n            <h1 className=\"m-3\">Nouvelle tâche</h1>\r\n            <div className=\"card mx-3\">\r\n                <form className=\"card-body\" onSubmit={(e) => this.handleSubmit(e)}>\r\n                    <div className=\"form-group\">\r\n                        <label form=\"taskName\">Nom de la tâche</label>\r\n                        <input type=\"text\" className=\"form-control\" name=\"taskName\" id=\"taskName\" required \r\n                        ref={input => this.newTask = input} />\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-primary\">Créer</button>\r\n                </form>\r\n            </div>\r\n        </section>)\r\n    }\r\n}\r\n\r\nexport default ToDoAddTask;","let initialData = [\n    {id: 'jsertu7a', name: 'Ranger la vaisselle', completed: false},\n    {id: 'jseruo7l', name: 'Répondre appel d\\'offres', completed: false},\n    {id: 'jseruy2q', name: 'Signer contrat', completed: false},\n    {id: 'jserv4sw', name: 'Aspirer le salon', completed: false}\n]\n\nexport default initialData;","import { Component } from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport ToDoList from'./ToDoList';\r\nimport Footer from'./Footer';\r\nimport ToDoAddTask from \"./ToDoAddTask\";\r\nimport {BrowserRouter,Switch,Route} from \"react-router-dom\";\r\nimport initialData from \"../initialData\";\r\nimport uniqueId from \"uniqueid\";\r\n\r\nclass ToDoApp extends Component\r\n{\r\n\r\n    state = \r\n    {\r\n        tasks : initialData\r\n    }\r\n\r\n    onAddTask = (newTaskName) =>\r\n    {\r\n        let newTask = {\r\n            id: uniqueId(),\r\n            name: newTaskName,\r\n            completed: false\r\n        }\r\n\r\n        this.setState(currentState => ({\r\n            tasks: [...currentState.tasks,newTask]\r\n        }))\r\n    }\r\n\r\n    onDeleteTaskCompleted = () =>\r\n    {\r\n        this.setState(currentState =>{\r\n            let newState = currentState.tasks.filter(task => !task.completed);\r\n\r\n            return {\r\n                tasks: newState\r\n            };\r\n        })\r\n    }\r\n\r\n    render()\r\n    {\r\n        return (<section id=\"todo\">\r\n                    \r\n                    <BrowserRouter>\r\n                    <Switch>\r\n                        <Route path=\"/add-task\" render={(props) => <ToDoAddTask {...props} onAddTask = {this.onAddTask} /> } />\r\n                        <Route path=\"/:filter?\" render={(props) => <ToDoList {...props} tasks={this.state.tasks} /> } />\r\n                        \r\n                    </Switch>\r\n                    <Footer onDeleteTaskCompleted = {this.onDeleteTaskCompleted} /> \r\n                    </BrowserRouter>      \r\n                </section>\r\n                )\r\n    }\r\n}\r\n\r\nexport default ToDoApp;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './css/toDoStyle.css';\nimport ToDoApp from './components/ToDoApp';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {FaListAlt, FaCheckSquare, FaPlusSquare, FaTrash} from 'react-icons/fa';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ToDoApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}